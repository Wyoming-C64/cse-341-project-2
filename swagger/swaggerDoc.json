{
  "swagger": "2.0",
  "info": {
    "version": "1.0.4",
    "title": "Railroad Roster REST API",
    "description": "Railroad Roster REST API v1.0.4 by Mike Lewis for BYU-I CSE-341: Web Services"
  },
  "host": "rr-roster.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Main"
        ],
        "summary": "Return API name and version number.",
        "description": "This endpoint simply returns an object containing the name of the API, version number, and author.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the version information for the API.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Railroad Roster REST API"
                },
                "version": {
                  "type": "string",
                  "example": "1.0.0"
                },
                "author": {
                  "type": "string",
                  "example": "Mike Lewis"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/status": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Provide status of whether user is logged in or out.",
        "description": "This endpoint simply returns a single boolean field indicating if a user is logged in or out.",
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Returns whether a user is logged in or out.",
            "schema": {
              "type": "object",
              "properties": {
                "loggedIn": {
                  "type": "string",
                  "example": "<true | false>"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api-docs/": {
      "get": {
        "tags": [
          "API Documentation"
        ],
        "summary": "Provide documentation for this API.",
        "description": "Executes the main Swagger documentation page handler.",
        "responses": {
          "200": {
            "description": "A functioning web page is returned allowing the user to navigate the documentation. No JSON data is returned on this route."
          }
        }
      }
    },
    "/profile/": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Return profile data for the logged in user.",
        "description": "<b>Must be authenticated to use.</b> This endpoint simply returns an object containing all of the pertinent information of the logged in user.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the user information for the currently logged in user. The example below represents the minimum data returned for a basic user. More information may be provided depending on the authorization method used.",
            "schema": {
              "type": "object",
              "properties": {
                "sid": {
                  "type": "string",
                  "example": "<string>"
                },
                "nickname": {
                  "type": "string",
                  "example": "someUser"
                },
                "name": {
                  "type": "string",
                  "example": "Some User Fullname"
                },
                "picture": {
                  "type": "string",
                  "example": "<url>"
                },
                "updated_at": {
                  "type": "string",
                  "example": "2023-10-25T06:18:15,350Z"
                },
                "email": {
                  "type": "string",
                  "example": "validemail@domain.com"
                },
                "email_verified": {
                  "type": "string",
                  "example": "< true | false >"
                },
                "sub": {
                  "type": "string",
                  "example": "<string>"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Must be an authorized user."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/roster/": {
      "get": {
        "tags": [
          "Roster"
        ],
        "summary": "Return the entire roster.",
        "description": "Returns all roster records in the collection. No filtering is applied.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "All roster records are successfully fetched and returned in an array.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "0123456789abcdef01234567"
                  },
                  "reportingMark": {
                    "type": "string",
                    "example": "TEST"
                  },
                  "carNumber": {
                    "type": "string",
                    "example": "123456"
                  },
                  "aarCarType": {
                    "type": "string",
                    "example": "XM"
                  },
                  "carLength": {
                    "type": "string",
                    "example": "480"
                  },
                  "carHeight": {
                    "type": "string",
                    "example": "186"
                  },
                  "color": {
                    "type": "string",
                    "example": "Brown"
                  },
                  "ltWeight": {
                    "type": "string",
                    "example": "50000"
                  },
                  "ldLimit": {
                    "type": "string",
                    "example": "150000"
                  },
                  "capacity": {
                    "type": "string",
                    "example": "125000"
                  },
                  "units": {
                    "type": "string",
                    "example": "pounds"
                  },
                  "builtMonth": {
                    "type": "string",
                    "example": "1"
                  },
                  "builtYear": {
                    "type": "string",
                    "example": "1988"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server or database error."
          }
        }
      },
      "post": {
        "tags": [
          "Roster"
        ],
        "summary": "Add a single roster record.",
        "description": "<b>Must be authorized to use.</b> Adds a record for a single piece of rolling stock using information provided in a JSON body.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "record",
            "in": "body",
            "description": "A valid JSON object with required data elements populated.",
            "format": "json",
            "schema": {
              "type": "object",
              "properties": {
                "reportingMark": {
                  "type": "string",
                  "example": "TEST"
                },
                "carNumber": {
                  "type": "string",
                  "example": "123456"
                },
                "aarCarType": {
                  "type": "string",
                  "example": "XM"
                },
                "carLength": {
                  "type": "string",
                  "example": "480"
                },
                "carHeight": {
                  "type": "string",
                  "example": "186"
                },
                "color": {
                  "type": "string",
                  "example": "Brown"
                },
                "ltWeight": {
                  "type": "string",
                  "example": "50000"
                },
                "ldLimit": {
                  "type": "string",
                  "example": "150000"
                },
                "capacity": {
                  "type": "string",
                  "example": "125000"
                },
                "units": {
                  "type": "string",
                  "example": "pounds"
                },
                "builtMonth": {
                  "type": "string",
                  "example": "1"
                },
                "builtYear": {
                  "type": "string",
                  "example": "1988"
                }
              },
              "required": [
                "reportingMark",
                "carNumber",
                "aarCarType",
                "carLength",
                "carHeight",
                "color",
                "ltWeight",
                "ldLimit",
                "capacity",
                "units",
                "builtMonth",
                "builtYear"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created - A single roster record is added with the data given. The return result provides the newly assigned ID number.",
            "schema": {
              "type": "object",
              "properties": {
                "acknowledged": {
                  "type": "boolean",
                  "example": true
                },
                "insertedId": {
                  "type": "string",
                  "example": "<hexadecimal string>"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Must be an authorized user."
          },
          "422": {
            "description": "Invalid or missing data error."
          },
          "500": {
            "description": "Internal server or database error."
          }
        }
      }
    },
    "/roster/{id}": {
      "get": {
        "tags": [
          "Roster"
        ],
        "summary": "Get a single roster record.",
        "description": "Returns the roster record identified by `id` for a single piece of rolling stock.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A valid and unique 24-digit hexadecimal string that identifies a railroad rolling stock item.",
            "format": "hex"
          }
        ],
        "responses": {
          "200": {
            "description": "A single rolling stock roster record identified by `id` is successfully returned.",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "0123456789abcdef01234567"
                },
                "reportingMark": {
                  "type": "string",
                  "example": "TEST"
                },
                "carNumber": {
                  "type": "string",
                  "example": "123456"
                },
                "aarCarType": {
                  "type": "string",
                  "example": "XM"
                },
                "carLength": {
                  "type": "string",
                  "example": "480"
                },
                "carHeight": {
                  "type": "string",
                  "example": "186"
                },
                "color": {
                  "type": "string",
                  "example": "Brown"
                },
                "ltWeight": {
                  "type": "string",
                  "example": "50000"
                },
                "ldLimit": {
                  "type": "string",
                  "example": "150000"
                },
                "capacity": {
                  "type": "string",
                  "example": "125000"
                },
                "units": {
                  "type": "string",
                  "example": "pounds"
                },
                "builtMonth": {
                  "type": "string",
                  "example": "1"
                },
                "builtYear": {
                  "type": "string",
                  "example": "1988"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid ID provided."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server or database error."
          }
        }
      },
      "put": {
        "tags": [
          "Roster"
        ],
        "summary": "Update a single roster record.",
        "description": "<b>Must be authorized to use.</b> Updates the roster record identified by `id` using information provided in a JSON body.",
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A valid and unique 24-digit hexadecimal string that identifies a railroad rolling stock item.",
            "format": "hex"
          },
          {
            "name": "record",
            "in": "body",
            "description": "A valid JSON object populated with one or more data fields to be changed.",
            "format": "json",
            "schema": {
              "type": "object",
              "properties": {
                "reportingMark": {
                  "type": "string",
                  "example": "TEST"
                },
                "carNumber": {
                  "type": "string",
                  "example": "123456"
                },
                "aarCarType": {
                  "type": "string",
                  "example": "XM"
                },
                "carLength": {
                  "type": "string",
                  "example": "480"
                },
                "carHeight": {
                  "type": "string",
                  "example": "186"
                },
                "color": {
                  "type": "string",
                  "example": "Brown"
                },
                "ltWeight": {
                  "type": "string",
                  "example": "50000"
                },
                "ldLimit": {
                  "type": "string",
                  "example": "150000"
                },
                "capacity": {
                  "type": "string",
                  "example": "125000"
                },
                "units": {
                  "type": "string",
                  "example": "pounds"
                },
                "builtMonth": {
                  "type": "string",
                  "example": "1"
                },
                "builtYear": {
                  "type": "string",
                  "example": "1988"
                }
              },
              "required": [
                "reportingMark",
                "carNumber",
                "aarCarType",
                "carLength",
                "carHeight",
                "color",
                "ltWeight",
                "ldLimit",
                "capacity",
                "units",
                "builtMonth",
                "builtYear"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success - The roster record identified by `id` is updated with the new data. No data is returned other than this status."
          },
          "400": {
            "description": "Invalid ID provided."
          },
          "401": {
            "description": "Unauthorized - Must be an authorized user."
          },
          "404": {
            "description": "Not found."
          },
          "422": {
            "description": "Invalid or missing data error."
          },
          "500": {
            "description": "Internal server or database error."
          }
        }
      },
      "delete": {
        "tags": [
          "Roster"
        ],
        "summary": "Delete a single roster item.",
        "description": "<b>Must be authorized to use.</b> Deletes a roster record identified by `id`. If `id` does not exist, no action is taken and no error occurs. Check the `deletedCount` attribute in the response to determine if a roster record was actually deleted.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A valid and unique 24-digit hexadecimal string that identifies a railroad rolling stock item.",
            "format": "hex"
          }
        ],
        "responses": {
          "200": {
            "description": "The roster record identified by `id` for a single piece of rolling stock is deleted from the collection if it exists. The response is an object containing an aknowledgement and the number of matching roster records deleted.",
            "schema": {
              "type": "object",
              "properties": {
                "acknowledged": {
                  "type": "boolean",
                  "example": true
                },
                "deletedCount": {
                  "type": "number",
                  "example": 1
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid ID provided."
          },
          "401": {
            "description": "Unauthorized - Must be an authorized user."
          },
          "500": {
            "description": "Internal server or database error."
          }
        }
      }
    },
    "/railroad/": {
      "get": {
        "tags": [
          "Railroads"
        ],
        "summary": "Return the entire list of railroads.",
        "description": "Returns all reailroad entities in the collection. No filtering is applied.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "All railroad entities are successfully fetched and returned in an array.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "0123456789abcdef01234567"
                  },
                  "reportingMark": {
                    "type": "string",
                    "example": "TEST"
                  },
                  "railroadName": {
                    "type": "string",
                    "example": "Test Every Single Track Company"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server or database error."
          }
        }
      },
      "post": {
        "tags": [
          "Railroads"
        ],
        "summary": "Add a single railroad entity.",
        "description": "<b>Must be authorized to use.</b> Adds a record for a single railroad entity using information provided in a JSON body.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "record",
            "in": "body",
            "description": "A valid JSON object with required data elements populated.",
            "format": "json",
            "schema": {
              "type": "object",
              "properties": {
                "reportingMark": {
                  "type": "string",
                  "example": "TEST"
                },
                "railroadName": {
                  "type": "string",
                  "example": "Test Every Single Track Company"
                }
              },
              "required": [
                "reportingMark",
                "railroadName"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created - A single railroad entity is added with the data given. The return result provides the newly assigned ID number.",
            "schema": {
              "type": "object",
              "properties": {
                "acknowledged": {
                  "type": "boolean",
                  "example": true
                },
                "insertedId": {
                  "type": "string",
                  "example": "<hexadecimal string>"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Must be an authorized user."
          },
          "422": {
            "description": "Invalid or missing data error."
          },
          "500": {
            "description": "Internal server or database error."
          }
        }
      }
    },
    "/railroad/{id}": {
      "get": {
        "tags": [
          "Railroads"
        ],
        "summary": "Get a single railroad entity.",
        "description": "Returns the railroad entity identified by `id`.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A valid and unique 24-digit hexadecimal string that identifies the railroad entity.",
            "format": "hex"
          }
        ],
        "responses": {
          "200": {
            "description": "A single railroad entity identified by `id` is successfully returned.",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "0123456789abcdef01234567"
                },
                "reportingMark": {
                  "type": "string",
                  "example": "TEST"
                },
                "railroadName": {
                  "type": "string",
                  "example": "Test Every Single Track Company"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid ID provided."
          },
          "404": {
            "description": "Not Found."
          },
          "500": {
            "description": "Internal server or database error."
          }
        }
      },
      "put": {
        "tags": [
          "Railroads"
        ],
        "summary": "Update a single railroad entity.",
        "description": "<b>Must be authorized to use.</b> Updates the railroad entity identified by `id` using information provided in a JSON body.",
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A valid and unique 24-digit hexadecimal string that identifies the railroad entity.",
            "format": "hex"
          },
          {
            "name": "record",
            "in": "body",
            "description": "A valid JSON object populated with one or more data fields to be changed.",
            "format": "json",
            "schema": {
              "type": "object",
              "properties": {
                "reportingMark": {
                  "type": "string",
                  "example": "TEST"
                },
                "railroadName": {
                  "type": "string",
                  "example": "Test Every Single Track Company"
                }
              },
              "required": [
                "reportingMark",
                "railroadName"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success - The single railroad entity identified by `id` is updated with the new data. No data is returned other than this status."
          },
          "400": {
            "description": "Invalid ID provided."
          },
          "401": {
            "description": "Unauthorized - Must be an authorized user."
          },
          "404": {
            "description": "Not found."
          },
          "422": {
            "description": "Invalid or missing data error."
          },
          "500": {
            "description": "Internal server or database error."
          }
        }
      },
      "delete": {
        "tags": [
          "Railroads"
        ],
        "summary": "Delete a single railroad entity.",
        "description": "<b>Must be authorized to use.</b> Deletes a railroad entity identified by `id`. If `id` does not exist, no action is taken and no error occurs. Check the `deletedCount` attribute in the response to determine if a railroad entity was actually deleted.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A valid and unique 24-digit hexadecimal string that identifies the railroad entity.",
            "format": "hex"
          }
        ],
        "responses": {
          "200": {
            "description": "The single railroad entity identified by `id` is deleted from the collection if it exists. The response is an object containing an aknowledgement and the number of matching records deleted.",
            "schema": {
              "type": "object",
              "properties": {
                "acknowledged": {
                  "type": "boolean",
                  "example": true
                },
                "deletedCount": {
                  "type": "number",
                  "example": 1
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid ID provided."
          },
          "401": {
            "description": "Unauthorized - Must be an authorized user."
          },
          "500": {
            "description": "Internal server or database error."
          }
        }
      }
    }
  },
  "components": {
    "securityDefinitions": {
      "OAuth2": {
        "type": "oauth2",
        "description": "This API uses OAuth 2.0 with the authorization code flow.",
        "flow": "accessCode",
        "authorizationUrl": "https://rr-roster.onrender.com/login/",
        "tokenUrl": "https://rr-roster.onrender.com/oauth/token",
        "scopes": {
          "read": "Grants read access",
          "write": "Grants write access",
          "admin": "Grants read and write access to administrative information"
        }
      }
    }
  }
}